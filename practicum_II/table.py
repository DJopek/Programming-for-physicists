import math

def round_to_significant(value):
    rozbi si cislo do arrayu po znakoch 1.23 bude že [1, . , 2,3]
    if 0 
    elif . skip
    else move to i+1
        if 1 move to i 

def round_values(hodnoty, chyba):

    rozbi si cislo do arrayu po znakoch 1.23 bude že [1, . , 2,3] zisti pocet prvkov za hodnotou . (vypis index pre . a pocet desatinnych miest = len() - index bodky)
    

# Príklad použitia:
P = [0.12895280999999997, 0.38427723, 0.3711598816666667, 0.528529, 0.5760000000000001, 1.5708493013333333, 3.0420016666666667, 4.444444444444445, 4.84, 7.488449999999999, 7.2250000000000005, 6.630533333333333, 5.993257142857143, 5.452225, 4.56968, 3.9204166666666667, 3.4160142857142852, 2.7224999999999997, 2.47009, 2.0833333333333335, 1.9384923076923075, 1.7476266666666667, 5.8963333333333345, 6.557785714285713, 7.098062500000001, 7.482722222222221, 7.418909090909091]
sigma_P = [0.0022335281869877597, 0.006655876865518311, 0.00642867772777919, 0.00915439081273571, 0.009976612651596734, 0.02720790800943407, 0.05268901443375871, 0.0769800358919501, 0.08383125908633367, 0.1297037586993916, 0.12514067084685138, 0.1148442061461236, 0.10380625874253657, 0.09443530714297223, 0.07914917934331347, 0.06790360853506486, 0.059167103022382504, 0.047155083236062684, 0.04278321379267808, 0.036084391824351615, 0.03357567167004518, 0.03026978179328905, 0.10212748911695292, 0.11358418042292218, 0.12294204885299366, 0.1296045506781358, 0.12849927482189177]
P, sigma_P = round_values(P, sigma_P)

# print("Zaokrúhlené hodnoty:", zaokruhlene_hodnoty_1)
# print("Zaokrúhlené chyby:", zaokruhlene_chyby_1)

I = [35.91, 35.79, 24.871666666666666, 24.23333333333333, 24.0, 22.882666666666665, 22.516666666666666, 22.22222222222222, 22.0, 19.349999999999998, 17.0, 14.866666666666667, 13.085714285714285, 11.675, 9.559999999999999, 8.083333333333332, 6.985714285714285, 5.5, 4.97, 4.166666666666667, 3.8615384615384616, 3.413333333333333, 22.166666666666668, 21.642857142857142, 21.0625, 20.388888888888886, 18.363636363636363]
sigma_I = [0.5078440902481784, 0.5061470339733307, 0.35173848318822837, 0.34271108661508, 0.3394112549695428, 0.3236097754326274, 0.3184337537943419, 0.3142696805273545, 0.311126983722081, 0.2736503243191939, 0.24041630560342617, 0.21024641627280014, 0.18505994616196503, 0.16510943340705886, 0.1351988165628679, 0.11431559629182518, 0.09879291885720622, 0.07778174593052023, 0.07028641404994282, 0.05892556509887896, 0.05461040063933029, 0.048271822929001645, 0.3134840063260361, 0.30607622099931986, 0.2978687315748332, 0.28834243188384767, 0.25970103599942296]
I, sigma_I = round_values(I, sigma_I)

U = [3.591, 10.737, 14.923, 21.81, 24.0, 68.648, 135.1, 200.0, 220.0, 387.0, 425.0, 446.0, 458.0, 467.0, 478.0, 485.0, 489.0, 495.0, 497.0, 500.0, 502.0, 512.0, 266.0, 303.0, 337.0, 367.0, 404.0]
sigma_U = [0.03591, 0.10737, 0.14923, 0.2181, 0.24000000000000002, 0.6864800000000001, 1.351, 2.0, 2.2, 3.87, 4.25, 4.460000000000001, 4.58, 4.670000000000001, 4.779999999999999, 4.8500000000000005, 4.890000000000001, 4.95, 4.970000000000001, 5.0, 5.0200000000000005, 5.12, 2.66, 3.0300000000000002, 3.37, 3.67, 4.04]
U, sigma_U = round_values(U, sigma_U)

R = [0.1, 0.3, 0.6, 0.9, 1, 3, 6, 9, 10, 20, 25, 30, 35, 40, 50, 60, 70, 90, 100, 120, 130, 150, 12, 14, 16, 18, 22]
sigma_R = [0.001, 0.003, 0.006, 0.009000000000000001, 0.01, 0.03, 0.06, 0.09, 0.1, 0.2, 0.25, 0.3, 0.35000000000000003, 0.4, 0.5, 0.6, 0.7000000000000001, 0.9, 1.0, 1.2, 1.3, 1.5, 0.12, 0.14, 0.16, 0.18, 0.22]
R, sigma_R = round_values(R, sigma_R)

def tabulkovac(value_1, error_1, value_2, error_2, value_3, error_3, value_4, error_4):
    for i in range(len(value_1)):
        print(str(value_1[i]) + "\pm" + str(error_1[i]) + " & " + str(value_2[i]) + "\pm" + str(error_2[i]) + " & " + str(value_3[i]) + "\pm" + str(error_3[i]) + " & " + str(value_4[i]) + "\pm" + str(error_4[i]))

tabulkovac(P, sigma_P, I, sigma_I, U, sigma_U, R, sigma_R)