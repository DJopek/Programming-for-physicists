import numpy as np
import matplotlib.pyplot as plt
from scipy import stats

# Data
# data = np.array([2.5833333333333335, 2.857142857142857, 3.3333333333333335, 1.6129032258064515, 1.4545454545454546, 1.6216216216216217, 1.619047619047619, 2.0816326530612246, 2.0, 2.6363636363636362, 2.6666666666666665, 3.5])
# x = np.array([1537.08966, 1478.3473800000002, 2095.14132, 636.3747000000001, 665.74584, 890.92458, 920.2957200000001, 1057.36104, 1096.5225599999999, 1174.8455999999999, 1311.91092, 1762.2684])
# error_data_x = np.array([9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038])
# # data_2 = np.array([5.601518040780537e-06, 5.387447287629689e-06, 7.635190195713598e-06, 2.3190998258008595e-06, 2.4261352023762838e-06, 3.246739756121203e-06, 3.353775132696628e-06, 3.853273556715274e-06, 3.995987392149172e-06, 4.281415063016971e-06, 4.7809134870356175e-06, 6.422122594525456e-06])

# data = np.array([1.1515151515151516, 1.6666666666666667, 1.7714285714285714, 2.5161290322580645, 2.8, 3.0476190476190474, 3.888888888888889, 3.8095238095238093, 4.086956521739131, 3.764705882352941, 4.842105263157895, 5.375, 7.478260869565218, 9.12, 9.153846153846153, 9.307692307692308, 9.384615384615385, 9.916666666666666])
# x = np.array([234.96912000000003, 283.92102, 313.29216, 391.6152, 440.5671, 509.0997600000001, 675.5362200000001, 695.1169799999999, 763.64964, 812.6015400000001, 861.5534400000001, 979.0380000000001, 1879.7529600000003, 1987.4471400000002, 2104.9317, 2202.8355, 2349.6911999999998, 2447.5950000000003])
# error_data_x = np.array([9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 19.58076, 29.371140000000004, 19.58076, 19.58076, 19.58076])

# data = np.array([2.1904761904761907, 2.4210526315789473, 2.206896551724138, 2.857142857142857, 2.923076923076923, 3.3333333333333335, 3.5652173913043477, 4.1, 3.5652173913043477, 4.545454545454546, 5.25, 5.0, 6.153846153846154, 6.3076923076923075, 5.882352941176471, 5.333333333333333, 6.285714285714286, 8.333333333333334, 7.818181818181818, 8.4, 6.888888888888889, 8.6])
# x = np.array([234.96912000000003, 254.54988000000006, 274.13063999999997, 313.29216, 342.6633000000001, 362.24406000000005, 372.03444, 401.40557999999993, 450.35748, 499.30938, 577.63242, 538.4709, 783.2304, 881.1342, 910.5053400000002, 753.8592600000001, 1037.78028, 1683.94536, 1752.47802, 1811.2203, 1977.6567599999998, 2124.51246])
# error_data_x = np.array([9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 9.79038, 97.9038, 97.9038, 97.9038, 146.85569999999998, 29.371140000000004, 19.58076, 29.371140000000004, 19.58076, 19.58076, 9.79038])

# Linear fit
slope, intercept, r_value, p_value, std_err = stats.linregress(x, data)

# Predicted values
predicted = slope * x + intercept

# slope_2, intercept_2, r_value_2, p_value_2, std_err_2 = stats.linregress(x, data_2)

# predicted_2 = slope_2 * x + intercept_2


# Plot
plt.errorbar(x, data, yerr=None, xerr=error_data_x, fmt='o', elinewidth=2)
plt.plot(x, predicted, color='red', label='Z치vislos콘 Q od delta P')
# plt.plot(x, predicted_2)
plt.xlabel('delta P [Pa]')
plt.ylabel('Q [ml/s]')
plt.title('Z치vislos콘 Q od delta P')
plt.legend()
plt.grid(True)
plt.show()

print("Slope:", slope)
print("Intercept:", intercept)

model,V=np.polyfit(x,data,1,w=1.0/error_data_x,cov=True)
y_fit=np.polyval(model,x)
fig,ax=plt.subplots()
# ax.errorbar(x,data,error_data,marker="o",linewidth=0,elinewidth=2,capsize=5)
ax.plot(x,y_fit,c="red")
ax.set_xlabel("x", fontsize=15)
ax.set_ylabel("y", fontsize=15)
# plt.show()

print("y=ax+b")
print("a = ",model[0], "+/-", np.sqrt(V[0,0]))
print("b = ",model[1], "+/-", np.sqrt(V[1,1]))
print("cov(a,b) = ",V[0,1])
print("corr(a,b) = ",V[0,1]/(np.sqrt(V[0,0]*V[1,1])))
